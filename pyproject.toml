[project]
name = "opsbox"
version = "0.2.3"
description = "AI-powered infrastructure management"
readme = "README.md"
requires-python = "==3.11.*"
authors = [
    { name = "Opsbox Team", email = "opsbox@gsudoers.com" },
]
dependencies = [
    "pluggy>=1.5.0,<2.0.0",
    "loguru>=0.7.2,<0.8.0",
    "pydantic>=2.8.0,<3.0.0",
    "rich-argparse>=1.5.2,<2.0.0",
    "requests>=2.32.3,<3.0.0",
    "python-dotenv>=1.0.1,<2.0.0",
    "llama-index>=0.12.0,<0.13.0",
    "toml>=0.10.2,<0.11.0",
    "importlib-resources>=6.4.5",
    "llama-index-llms-anthropic>=0.6.3",
    "dateparser>=1.2.0",
]
license = {file = "LICENCE.txt"}
classifiers = [
    "Environment :: Console",
    "Programming Language :: Python :: 3",
    "Intended Audience :: Developers",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
    "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)"
    
]

[project.urls]
#Homepage = "https://example.com"
Documentation = "https://sudoersllc.github.io/opsbox-docs/core/"
Repository = "https://github.com/sudoersllc/opsbox-core.git"
Issues = "https://github.com/sudoersllc/opsbox-core/issues"
#Changelog = "https://github.com/me/spam/blob/master/CHANGELOG.md"


[project.scripts]
opsbox = "opsbox.main:main"

[tool.setuptools]
packages = ["opsbox"]

[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project.optional-dependencies]
aws = [
    "opsbox-s3-checks>=0.2.0",
    "opsbox-ec2-checks>=0.2.0",
    "opsbox-elb-checks>=0.2.0",
    "opsbox-aws-iam-checks>=0.2.0",
    "opsbox-r53-checks>=0.2.0",
    "opsbox-rds-checks>=0.2.0",
    "opsbox-general-handler>=0.2.0",
    "opsbox-rego-handler>=0.2.1",
]

[tool.uv]
dev-dependencies = [
    "ruff>=0.5.1,<0.6.0",
    "pytest>=8.3.2,<9.0.0",
    "pre-commit>=4.0.1",
    "pytest-html>=4.1.1",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
]

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
    "--ignore=./tests/integration"
]
pythonpath = [
  "."
]


[tool.ruff]
line-length = 200

lint.select = [
    "F",    # Pyflakes
    "E",    # pycodestyle errors
    "S",    # flake8-bandit
    "D101", # Missing docstring in public class
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "A",    # flake8-builtins
    "SIM",  # flake8-simplify
    "Q"     # flake8-quotes
]
fix = true
